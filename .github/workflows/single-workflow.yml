name: 🧪 Single Workflow

on:
  schedule:
    # Execute everyday at 03:00am (UTC+2)
    - cron: "00 1 * * *"

  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select Environment
        required: true
        default: DEV
        options:
          - DEV

env:
  CI: true
  postman_collection_id: 4032962-f831b726-e7a3-445f-83a6-c10586696dd1
  postman_environment_id: 4032962-d4db2ed5-980b-4830-9e5a-870775472a2c

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set_environment.outputs.environment }}
      postman_environment_id: ${{ steps.set_environment.outputs.postman_environment_id }}

    steps:

      - name: 🌍 Set Environment
        id: set_environment
        env:
          WORKFLOW_DISPATCH_ENV: ${{ inputs.environment || github.event.inputs.environment }}
        run: |
          # Default to dev if not set
          ENV="${WORKFLOW_DISPATCH_ENV:-DEV}"
          
          # Set the environment ID based on the selected environment
          case "$ENV" in
            "DEV")
              postman_environment_id="${{ env.postman_environment_id }}"
              ;;
            "UAT")
              postman_environment_id="${{ env.postman_environment_id }}"
              ;;
            *)
              echo "ERROR: Invalid environment selected: $ENV"
              exit 1
              ;;
          esac
          
          echo "environment=$ENV" >> $GITHUB_OUTPUT
          echo "postman_environment_id=$postman_environment_id" >> $GITHUB_OUTPUT

  positive-tests:
    needs: setup
    if: always()
    runs-on: ubuntu-latest
    outputs:
      test_results: ${{ steps.aggregate.outputs.test_results }}
      detailed_output: ${{ steps.aggregate.outputs.detailed_output }}
      
    steps:

      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 📮 Setup Postman
        uses: ./.github/actions/postman-setup
        with:
          postman_api_key: ${{ secrets.postman_api_key }}
      
      - name: 🧪 Wait 2 seconds
        if: always()
        id: test-1
        uses: ./.github/actions/postman-test-runner
        with:
          test-name: "Wait 2 seconds"
          collection-id: ${{ env.postman_collection_id }}
          environment-id: ${{ needs.setup.outputs.postman_environment_id }}
          folder-id: "4032962-731bbb6b-e993-4372-a816-69029577737b"
          results-filename: "wait-2-seconds-results.json"
      
      - name: 🛟 Aggregate Results
        if: always()
        id: aggregate
        shell: bash
        run: |
          echo "test_results<<EOF" >> $GITHUB_OUTPUT
          echo "${{ steps.test-1.outputs.results-summary || 'Wait 2 seconds:skipped' }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "detailed_output<<EOF" >> $GITHUB_OUTPUT
          echo "${{ steps.test-1.outputs.detailed-output }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  negative-tests:
    needs: setup
    if: always()
    runs-on: ubuntu-latest
    outputs:
      test_results: ${{ steps.aggregate.outputs.test_results }}
      detailed_output: ${{ steps.aggregate.outputs.detailed_output }}
    steps:

      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 📮 Setup Postman
        uses: ./.github/actions/postman-setup
        with:
          postman_api_key: ${{ secrets.postman_api_key }}
      
      - name: 🧪 [N] Wait 5 seconds
        if: always()
        id: test-1
        uses: ./.github/actions/postman-test-runner
        with:
          test-name: "[N] Wait 5 seconds"
          collection-id: ${{ env.postman_collection_id }}
          environment-id: ${{ needs.setup.outputs.postman_environment_id }}
          folder-id: "4032962-731bbb6b-e993-4372-a816-69029577737b"
          results-filename: "wait-5-seconds-results.json"
      
      - name: 🛟 Aggregate Results
        if: always()
        id: aggregate
        shell: bash
        run: |
          echo "test_results<<EOF" >> $GITHUB_OUTPUT
          echo "${{ steps.test-1.outputs.results-summary || '[N] Wait 5 seconds:skipped' }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "detailed_output<<EOF" >> $GITHUB_OUTPUT
          echo "${{ steps.test-1.outputs.detailed-output }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
