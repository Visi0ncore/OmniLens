name: 🏆 Test Golden Path

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'dashboard/**'
      - '.github/workflows/test-golden-repo.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'dashboard/**'
      - '.github/workflows/test-golden-repo.yml'
  workflow_dispatch:

jobs:
  test-golden-repo:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: omnilens
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      working-directory: ./dashboard
      run: bun install

    - name: Setup database
      working-directory: ./dashboard
      run: |
        # Wait for PostgreSQL to be ready
        sleep 10
        
        # Test database connection
        echo "Testing database connection..."
        psql -h localhost -U postgres -d omnilens -c "SELECT 1;"
        
        # Create database schema using the SQL file
        echo "Creating database schema..."
        psql -h localhost -U postgres -d omnilens -f lib/schema.sql
        
        # Verify the schema was applied correctly
        echo "Verifying database schema..."
        psql -h localhost -U postgres -d omnilens -c "\d repositories"
        
        # Check if table is empty
        echo "Checking table contents..."
        psql -h localhost -U postgres -d omnilens -c "SELECT COUNT(*) FROM repositories;"
      env:
        PGPASSWORD: postgres

    - name: Start development server
      working-directory: ./dashboard
      run: |
        # Set environment variables
        echo "DB_USER=postgres" >> .env.local
        echo "DB_HOST=localhost" >> .env.local
        echo "DB_NAME=omnilens" >> .env.local
        echo "DB_PASSWORD=postgres" >> .env.local
        echo "DB_PORT=5432" >> .env.local
        echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> .env.local
        
        # Test API before starting server
        echo "Testing API endpoint..."
        curl -s "http://localhost:3000/api/repo" || echo "API not ready yet"
        
        # Start server in background
        bun run dev &
        sleep 15
        
        # Test API after starting server
        echo "Testing API endpoint after server start..."
        curl -s "http://localhost:3000/api/repo" | jq '.'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run golden repository tests
      working-directory: ./dashboard
      run: bun run test:golden
