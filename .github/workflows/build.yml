name: 🏗️ Validate Application

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  BUN_VERSION: 'latest'

jobs:
  # Job to detect changes and set up matrix
  changes:
    name: 📝 Detect Changes
    runs-on: ubuntu-latest
    outputs:
      dashboard: ${{ steps.changes.outputs.dashboard }}
      website: ${{ steps.changes.outputs.website }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            dashboard:
              - 'dashboard/**'
            website:
              - 'website/**'

  # Validate Dashboard (Next.js with Bun)
  validate-dashboard:
    name: 🎯 Validate Dashboard
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.dashboard == 'true' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            dashboard/node_modules
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('dashboard/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        working-directory: ./dashboard
        run: bun install --frozen-lockfile

      - name: Run linting
        working-directory: ./dashboard
        run: bun run lint

      - name: Run tests
        working-directory: ./dashboard
        run: bun run test

      - name: Build application
        working-directory: ./dashboard
        run: bun run build

      - name: Upload dashboard artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-build
          path: dashboard/.next/
          retention-days: 7
        if: github.event_name != 'pull_request'

  # Validate Website (Next.js) - Vercel handles deployment
  validate-website:
    name: 🌐 Validate Website
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.website == 'true' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: website/package-lock.json

      - name: Install dependencies
        working-directory: ./website
        run: npm ci

      - name: Validate build
        working-directory: ./website
        run: npm run build

  # Comprehensive validation job that runs when both components need validation
  validate-all:
    name: 🚀 Validate Complete Application
    runs-on: ubuntu-latest
    needs: changes
    if: (needs.changes.outputs.dashboard == 'true' && needs.changes.outputs.website == 'true') || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup both Bun and Node.js
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: website/package-lock.json

      # Cache for both components
      - name: Cache dashboard dependencies
        uses: actions/cache@v4
        with:
          path: |
            dashboard/node_modules
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('dashboard/bun.lockb') }}

      - name: Cache website dependencies
        uses: actions/cache@v4
        with:
          path: website/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('website/package-lock.json') }}

      # Install dependencies for both
      - name: Install dashboard dependencies
        working-directory: ./dashboard
        run: bun install --frozen-lockfile

      - name: Install website dependencies
        working-directory: ./website
        run: npm ci

      # Run quality checks and build dashboard
      - name: Lint dashboard
        working-directory: ./dashboard
        run: bun run lint

      - name: Test dashboard
        working-directory: ./dashboard
        run: bun run test

      - name: Build dashboard
        working-directory: ./dashboard
        run: bun run build

      # Validate website build
      - name: Validate website build
        working-directory: ./website
        run: npm run build

      # Upload dashboard artifacts only (Vercel handles website deployment)
      - name: Upload dashboard artifacts
        uses: actions/upload-artifact@v4
        with:
          name: complete-dashboard-build
          path: dashboard/.next/
          retention-days: 7
        if: github.event_name != 'pull_request'

  # Summary job
  validation-summary:
    name: 📊 Validation Summary
    runs-on: ubuntu-latest
    needs: [changes, validate-dashboard, validate-website, validate-all]
    if: always()
    
    steps:
      - name: Validation Summary
        run: |
          echo "## ✅ Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Components Validated:" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.changes.outputs.dashboard }}" == "true" ]]; then
            echo "✅ Dashboard (Next.js + Bun) - Built and tested" >> $GITHUB_STEP_SUMMARY
          else
            echo "⏭️ Dashboard (no changes)" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.changes.outputs.website }}" == "true" ]]; then
            echo "✅ Website (Next.js) - Build validated (Vercel handles deployment)" >> $GITHUB_STEP_SUMMARY
          else
            echo "⏭️ Website (no changes)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Validation Status:" >> $GITHUB_STEP_SUMMARY
          echo "- Dashboard: ${{ needs.validate-dashboard.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Website: ${{ needs.validate-website.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Complete Validation: ${{ needs.validate-all.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY